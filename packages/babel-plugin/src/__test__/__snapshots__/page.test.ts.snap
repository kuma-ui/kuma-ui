// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Hero Page > should match 1`] = `
"
.üêª-802658479{letter-spacing:-0.025em;line-height:1;}@media (max-width: 576px){.üêª-802658479{line-height:2.5rem;}}.üêª-2056626474{line-height:1.75rem;}@media (prefers-color-scheme: dark){.üêª-2056626474{mix-blend-mode:plus-lighter;}}.üêª-2129012941{font-size:1.25rem;line-height:1.75rem;font-weight:700;margin-bottom:0.25rem;}.üêª-3990001830{font-size:1rem;line-height:1.5rem;}.üêª-1218609476 { margin: 40px auto; }@media (min-width: 576px) { .üêª-1218609476 { margin: 80px auto 0px; } } .üêª-3751241005 { position: relative; } .üêª-1497335934 { display: initial;background: white; } .üêª-43925180 { position: fixed;z-index: -1;background: radial-gradient(circle at 75% 50%, hsl(186 75% 85%), rgba(255, 255, 255, 0) 25%), radial-gradient(circle at 60% 30%, hsl(200 75% 85%), rgba(255, 255, 255, 0) 10%);inset: 0px; }@media (min-width: 576px) { .üêª-43925180 { inset: 100px; } } .üêª-1616829372 { font-size: 2.25rem;font-weight: 800; }@media (min-width: 576px) { .üêª-1616829372 { font-size: 3.25rem; } } .üêª-204229720 { margin-top: 1.5rem;color: #718096;font-size: 1.125rem; } .üêª-1325479555 { margin-left: auto;margin-right: auto;padding: 40px;display: flex;flex-direction: column;justify-content: center;gap: 1rem; }@media (min-width: 576px) { .üêª-1325479555 { flex-direction: row; } } .üêª-1802072787 { padding-left: 1.5rem;padding-right: 1.5rem;line-height: 45px;height: 3rem;cursor: pointer;background: #292e32;color: white;border-radius: 6px;text-align: center;font-weight: 600; }.üêª-1802072787:hover { opacity: 0.9; } .üêª-1787024902 { margin-top: 5rem; } .üêª-932295971 { display: grid;gap: 1.5rem;grid-template-columns: repeat(1,minmax(0,1fr)); }@media (min-width: 576px) { .üêª-932295971 { grid-template-columns: repeat(1,minmax(0,1fr)); } }@media (min-width: 768px) { .üêª-932295971 { grid-template-columns: repeat(3,minmax(0,1fr)); } }  .üêª-4211526926 { margin-bottom: 0.75rem;width: 3rem;height: 3rem;display: flex;background: #f6f6f7;justify-content: center;align-items: center;border-radius: 6px;font-size: 24px; }  

import React from \\"react\\";
import { Box, Heading, css, Text, Link } from \\"@kuma-ui/core\\";
import { useState, useEffect } from \\"react\\";
export const App = () => {
  const isDark = useState(false);
  useEffect(() => {
    const html = document.getElementsByTagName(\\"html\\")[0];
    isDark[1](html.style.colorScheme === \\"dark\\");
    const observer = new MutationObserver(function (mutations) {
      mutations.forEach(function (mutation) {
        // 'colorScheme' is not a standard style property, but we monitor it here
        // because 'nextra-theme-docs' applies its own color scheme settings.
        isDark[1](html.style.colorScheme === \\"dark\\");
      });
    });
    observer.observe(html, {
      attributeFilter: [\\"style\\"]
    });
    return () => observer.disconnect();
  }, []);
  return <Box className={\\"üêª-1218609476\\"}>
      <Box className={\\"üêª-3751241005\\"}>
        <Box role=\\"presentation\\" className={\\"üêª-1497335934\\"}>
          <div className={\\"üêª-43925180\\"} />
        </Box>
        <Heading className={\`üêª-1616829372 \${\\"\\\\uD83D\\\\uDC3B-802658479\\"}\`}>
          Empower Your Web with Ultimate Performance and Flexibility
        </Heading>
        <Text style={{
        mixBlendMode: isDark[0] ? \\"plus-lighter\\" : \\"initial\\"
      }} className={\`üêª-204229720 \${\\"\\\\uD83D\\\\uDC3B-2056626474\\"}\`}>
          With Kuma UI's headless, zero-runtime UI components, build
          top-performing websites effortlessly, while enjoying the best
          developer experience. Say hello to the future of CSS-in-JS
        </Text>
        <Box className={\\"üêª-1325479555\\"}>
          <Link href=\\"/docs\\" className={\\"üêª-1802072787\\"}>
            Get Started
          </Link>
        </Box>
      </Box>
      <Box as=\\"section\\" className={\\"üêª-1787024902\\"}>
        <Box className={\\"üêª-932295971\\"}>
          {gridData.map(data => <Box key={data.emoji}>
              <Box className={\\"üêª-4211526926\\"}>
                {data.emoji}
              </Box>
              <Heading as=\\"h2\\" className={\\"\\\\uD83D\\\\uDC3B-2129012941\\"}>
                {data.title}
              </Heading>
              <Text className={\\"\\\\uD83D\\\\uDC3B-3990001830\\"}>
                {data.description}
              </Text>
            </Box>)}
        </Box>
      </Box>
    </Box>;
};
const gridData = [{
  emoji: \\"‚ö°Ô∏è\\",
  title: \\"Zero-runtime\\",
  description: \\"Deliver blazing-fast websites with zero-runtime CSS extraction.\\"
}, {
  emoji: \\"üîÆ\\",
  title: \\"Autocomplete\\",
  description: \\"Experience seamless development with style autocompletion.\\"
}, {
  emoji: \\"üõ†Ô∏è\\",
  title: \\"Headless Components\\",
  description: \\"Enjoy maximum customization freedom with our headless components.\\"
}, {
  emoji: \\"ü§ù\\",
  title: \\"Hybrid Approach\\",
  description: \\"The best of both worlds‚Äîsupport for any writing style with our hybrid approach.\\"
}, {
  emoji: \\"üöÄ\\",
  title: \\"RSC Support\\",
  description: \\"Stay updated with cutting-edge Next.js technology via our RSC support.\\"
}, {
  emoji: \\"ü•á\\",
  title: \\"Familiar DX\\",
  description: \\"Delight in the ultimate DX with our familiar API design.\\"
}];
export default App;
"
`;
